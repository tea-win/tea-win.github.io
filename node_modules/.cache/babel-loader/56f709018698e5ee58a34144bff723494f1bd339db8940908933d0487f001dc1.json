{"ast":null,"code":"var _jsxFileName = \"/Users/teawin/personal-website/src/components/Modal.js\";\n// src/components/Modal.jsx\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  projects\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `project-grid ${projects.length > 1 ? \"project-grid-cols-2\" : \"project-grid-cols-1\"}`,\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          style: {\n            backgroundImage: `url(${project.backgroundImage})`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"project-title\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"project-details\",\n              children: project.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-technologies\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Technologies:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc list-inside\",\n                children: project.technologies.map((tech, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: tech\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: project.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"project-link\",\n              children: \"View Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, project.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Modal","isOpen","onClose","projects","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","project","style","backgroundImage","title","details","technologies","tech","index","href","link","target","rel","_c","$RefreshReg$"],"sources":["/Users/teawin/personal-website/src/components/Modal.js"],"sourcesContent":["// src/components/Modal.jsx\nimport React from \"react\";\n\nconst Modal = ({ isOpen, onClose, projects }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"close-button\" onClick={onClose}>\n          &times;\n        </button>\n        <div\n          className={`project-grid ${\n            projects.length > 1 ? \"project-grid-cols-2\" : \"project-grid-cols-1\"\n          }`}\n        >\n          {projects.map((project) => (\n            <div\n              key={project.title}\n              className=\"project-card\"\n              style={{ backgroundImage: `url(${project.backgroundImage})` }}\n            >\n              <div className=\"project-card-inner\">\n                <h3 className=\"project-title\">{project.title}</h3>\n                <p className=\"project-details\">{project.details}</p>\n                <div className=\"project-technologies\">\n                  <strong>Technologies:</strong>\n                  <ul className=\"list-disc list-inside\">\n                    {project.technologies.map((tech, index) => (\n                      <li key={index}>{tech}</li>\n                    ))}\n                  </ul>\n                </div>\n                <a\n                  href={project.link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"project-link\"\n                >\n                  View Project\n                </a>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}